#!/usr/bin/env python3

import sys
import argparse

import ipswapi
import utils
import iphonewiki

if __name__ == '__main__':
    argv = sys.argv

    parser = argparse.ArgumentParser()
    parser.add_argument("-b", help="Convert an iOS to its buildid", nargs=2, metavar=('DEVICE', 'iOS'))
    parser.add_argument("-c", help="Get the codename of an iOS", nargs=2, metavar=('DEVICE', 'iOS'))
    parser.add_argument("-d", help="Download an ipsw", nargs=2, metavar=('DEVICE', 'iOS'))
    parser.add_argument("-k", help="Get keys for an iOS", nargs=2, metavar=('DEVICE', 'iOS'))
    # parser.add_argument("-m", help="Download a build manifest from an iOS", nargs=2, metavar=('DEVICE', 'iOS'))
    parser.add_argument("-s", help="Print the signed iOS versions for a device", nargs=1, metavar='DEVICE')
    parser.add_argument("--baseband", help="Get the baseband version of an iOS", nargs=2, metavar=('DEVICE', 'iOS'))
    parser.add_argument("--shsh", help="Save shsh for all signed iOS versions", nargs=2, metavar=('ECID', 'DEVICE'))
    parser.add_argument("--split", help="Split a GID decrypted key", nargs=1, metavar='KEY')

    args = parser.parse_args()

    if args.b:
        print(utils.iOSToBuildid(argv[2], argv[3]))  # ./yeet -b device version

    elif args.c:
        print(iphonewiki.getCodename(argv[2], argv[3]))  # ./yeet -c device version

    elif args.d:
        ipswapi.downloadIPSW(argv[2], argv[3])  # ./yeet -d device version

    elif args.k:
        print(iphonewiki.parseWiki(argv[2], argv[3]))  # ./yeet -d device version

    elif args.s:
        ipswapi.signed(argv[2])  # ./yeet -s device

    # elif args.m:
        # ipswapi.downloadBuildManifest(argv[2], argv[3])  # ./yeet -d device version

    elif args.baseband:
        print(iphonewiki.getBasebandVersion(argv[2], argv[3]))  # ./yeet -d device version

    elif args.shsh:
        utils.saveblobs(argv[2], argv[3])  # ./yeet --shsh ecid device

    elif args.split:
        utils.splitKbag(argv[2])  # ./yeet --split kbag

    else:
        sys.exit(parser.print_help())
