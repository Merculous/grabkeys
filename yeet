#!/usr/bin/env python3

import sys

import ipswapi
import utils
import iphonewiki


# TODO GID decryption via API KBAG output

def usage(name):
    print(f'Usage: {name} <args> <stuff>')
    print('\t-b\t\tGet the buildid on an iOS')
    print('\t-c\t\tGet codename of an iOS')
    print('\t-d\t\tDownload an ipsw')
    print('\t-k\t\tGrab Keys')
    print('\t-s\t\tPrint all signed versions of a device')
    #print('\t-x\t\tExtract IPSW')
    #print('\t--baseband\tGet baseband version from an iOS')
    #print('\t--shsh\t\tGrab shsh blobs for a device')
    print('\t--split\t\tSplit KBAG key')


if __name__ == '__main__':
    argv = sys.argv
    if len(argv) == 1:
        usage(argv[0])

    if len(argv) > 4:
        sys.exit('We are expecting two arguments but a max of 3!')

    if '-b' in argv:
        print(utils.iOSToBuildid(argv[2], argv[3]))  # ./yeet -b device iOS

    elif '-c' in argv:
        print(iphonewiki.getCodename(argv[2], argv[3]))  # ./yeet -k device version

    elif '-d' in argv:
        ipswapi.downloadIPSW(argv[2], argv[3])  # ./yeet -d device version

    elif '-k' in argv:
        iphonewiki.grabKeys(argv[2], argv[3])  # ./yeet -k device version

    elif '-s' in argv:
        ipswapi.signed(argv[2])  # ./yeet -s device

    #elif '-x' in argv:
        #utils.extractIPSW(argv[2])  # ./yeet -x IPSW

    #elif '--baseband' in argv:
        #print(iphonewiki.getBasebandVersion(argv[2], argv[3]))  # ./yeet --baseband device version

    #elif '--shsh' in argv:
        #utils.saveblobs(argv[2])  # ./yeet --shsh device

    elif '--split' in argv:
        utils.splitKbag(argv[2])  # ./yeet --split kbag

